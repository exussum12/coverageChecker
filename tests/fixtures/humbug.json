{
  "summary": {
    "total": 246,
    "kills": 186,
    "escapes": 28,
    "errors": 0,
    "timeouts": 10,
    "notests": 22,
    "covered_score": 88,
    "combined_score": 80,
    "mutation_coverage": 91
  },
  "uncovered": [
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startTestSuite",
      "line": 44
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startTestSuite",
      "line": 58
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startTestSuite",
      "line": 59
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\BracketedStatement",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startsWith",
      "line": 96
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startsWith",
      "line": 96
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "startsWith",
      "line": 96
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 104
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 104
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 104
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalOr",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 106
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 107
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 107
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 111
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "shouldRunTest",
      "line": 114
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "hasTestChanged",
      "line": 121
    },
    {
      "file": "src\/DiffFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFilter",
      "method": "hasTestChanged",
      "line": 125
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "???",
      "method": "findAutoLoader",
      "line": 24
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "findAutoLoader",
      "line": 30
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "???",
      "method": "adjustForStdIn",
      "line": 51
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "???",
      "method": "adjustForStdIn",
      "line": 56
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "adjustForStdIn",
      "line": 56
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "???",
      "method": "adjustForStdIn",
      "line": 57
    }
  ],
  "escaped": [
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' && $line[0] == '@';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "handle",
      "line": 13,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if (empty($parsedLine[1])) {\n+        if (empty($parsedLine[0])) {\n             return;\n         }\n \n         $currentFileName = $parsedLine[1];\n         if ($currentFileName) {\n             $this->diffFileState->setCurrentFile($currentFileName);",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' && $line[0] == '@';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLines",
      "line": 39,
      "diff": "--- Original\n+++ New\n@@ @@\n         $filename = '';\n-        $lineNumber = 0;\n+        $lineNumber = 1;\n         while (($line = fgets($this->file)) !== false) {\n             $filename = $this->checkForFileName($line, $filename);\n             if ($lineNumber = $this->getLineNumber($line, $lineNumber)) {\n                 $error = $this->getMessage($line);\n                 $this->handleRelatedError($filename, $lineNumber, $error);\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThan",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "handleRelatedError",
      "line": 136,
      "diff": "--- Original\n+++ New\n@@ @@\n                 $currentLine = $reflection->getStartLine();\n-                while ($currentLine < $reflection->getEndLine()) {\n+                while ($currentLine <= $reflection->getEndLine()) {\n                     $this->addError($filename, $currentLine++, $error);\n                 }\n             }\n         }\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\NewObject",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getReflector",
      "line": 163,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ($matches['class']) {\n-            return new ReflectionMethod(\n+            new ReflectionMethod(\n                 $matches['class'],\n                 $matches['function']\n-            );\n+            ); return null;\n         }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\NewObject",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getReflector",
      "line": 169,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return new ReflectionFunction(\n+        new ReflectionFunction(\n             $matches['function']\n-        );\n+        ); return null;\n     }\n }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "groupTestsBySuite",
      "line": 62,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if (strpos($test, '::') > 0) {\n+            if (strpos($test, '::') > 1) {\n                 list ($suite, $testName) = explode('::', $test);\n             }\n             $groupedTests[$suite][] = $testName;\n         }\n         return $groupedTests;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "matchFuzzyLines",
      "line": 72,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $index = -$fuzziness;\n+        $index = +$fuzziness;\n         do {\n             if (isset($testData[$found][$line + $index])) {\n                 $runTests = array_unique(\n                     array_merge(\n                         $runTests,\n                         $testData[$found][$line]",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThan",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "matchFuzzyLines",
      "line": 82,
      "diff": "--- Original\n+++ New\n@@ @@\n             }\n-        } while (++$index < $fuzziness);\n+        } while (++$index <= $fuzziness);\n \n         return $runTests;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 63,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                $errors['start'] <= $lineNumber &&\n+                $errors['start'] <= $lineNumber ||\n                 $errors['end'] >= $lineNumber\n             )) {\n                 \/\/unset this error\n                 unset($this->errorRanges[$file][$number]);\n                 $valid = false;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 64,
      "diff": "--- Original\n+++ New\n@@ @@\n                 $errors['start'] <= $lineNumber &&\n-                $errors['end'] >= $lineNumber\n+                $errors['end'] > $lineNumber\n             )) {\n                 \/\/unset this error\n                 unset($this->errorRanges[$file][$number]);\n                 $valid = false;\n             }\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "???",
      "method": "findAutoLoader",
      "line": 14,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    $found = false;\n+    $found = true;\n \n     foreach ($locations as $file) {\n         if (file_exists($file)) {\n             require_once($file);\n             $found = true;\n             break;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWrongArgs",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "???",
      "method": "findAutoLoader",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     foreach ($locations as $file) {\n-        if (file_exists($file)) {\n+        if (!file_exists($file)) {\n             require_once($file);\n             $found = true;\n             break;\n         }\n     }\n     \/\/ @codeCoverageIgnoreStart",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWrongArgs",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "Can't find the autoload file,please make sure 'composer install' has been run"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "???",
      "method": "findAutoLoader",
      "line": 19,
      "diff": "--- Original\n+++ New\n@@ @@\n             require_once($file);\n-            $found = true;\n+            $found = false;\n             break;\n         }\n     }\n     \/\/ @codeCoverageIgnoreStart\n     if (!$found) {\n         error_log(",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWrongArgs",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "Can't find the autoload file,please make sure 'composer install' has been run"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
      "class": "???",
      "method": "handleOutput",
      "line": 84,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    if ($coveredLines + $uncoveredLines == 0) {\n+    if ($coveredLines - $uncoveredLines == 0) {\n         error_log('No lines found!');\n         return;\n     }\n \n     $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "printOptions",
      "line": 138,
      "diff": "--- Original\n+++ New\n@@ @@\n {\n-    $tabWidth = 8;\n+    $tabWidth = 9;\n     $defaultWidth = 80;\n \n     $width = (int) (`tput cols` ?: $defaultWidth);\n     $width -= 2 * $tabWidth;\n     foreach ($arguments as $argument => $class) {\n         $class = __NAMESPACE__ . '\\\\' . $class;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "printOptions",
      "line": 139,
      "diff": "--- Original\n+++ New\n@@ @@\n     $tabWidth = 8;\n-    $defaultWidth = 80;\n+    $defaultWidth = 81;\n \n     $width = (int) (`tput cols` ?: $defaultWidth);\n     $width -= 2 * $tabWidth;\n     foreach ($arguments as $argument => $class) {\n         $class = __NAMESPACE__ . '\\\\' . $class;\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\MinusEqual",
      "class": "???",
      "method": "printOptions",
      "line": 142,
      "diff": "--- Original\n+++ New\n@@ @@\n     $width = (int) (`tput cols` ?: $defaultWidth);\n-    $width -= 2 * $tabWidth;\n+    $width += 2 * $tabWidth;\n     foreach ($arguments as $argument => $class) {\n         $class = __NAMESPACE__ . '\\\\' . $class;\n \n         $argument = '--' . $argument;\n         if (strlen($argument) < $tabWidth) {\n             $argument .= \"\\t\";",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "printOptions",
      "line": 142,
      "diff": "--- Original\n+++ New\n@@ @@\n     $width = (int) (`tput cols` ?: $defaultWidth);\n-    $width -= 2 * $tabWidth;\n+    $width -= 3 * $tabWidth;\n     foreach ($arguments as $argument => $class) {\n         $class = __NAMESPACE__ . '\\\\' . $class;\n \n         $argument = '--' . $argument;\n         if (strlen($argument) < $tabWidth) {\n             $argument .= \"\\t\";",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Multiplication",
      "class": "???",
      "method": "printOptions",
      "line": 142,
      "diff": "--- Original\n+++ New\n@@ @@\n     $width = (int) (`tput cols` ?: $defaultWidth);\n-    $width -= 2 * $tabWidth;\n+    $width -= 2 \/ $tabWidth;\n     foreach ($arguments as $argument => $class) {\n         $class = __NAMESPACE__ . '\\\\' . $class;\n \n         $argument = '--' . $argument;\n         if (strlen($argument) < $tabWidth) {\n             $argument .= \"\\t\";",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThan",
      "class": "???",
      "method": "printOptions",
      "line": 147,
      "diff": "--- Original\n+++ New\n@@ @@\n         $argument = '--' . $argument;\n-        if (strlen($argument) < $tabWidth) {\n+        if (strlen($argument) <= $tabWidth) {\n             $argument .= \"\\t\";\n         }\n \n         error_log(sprintf(\n             \"%s\\t%s\",\n             $argument,",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThan",
      "class": "???",
      "method": "printOptions",
      "line": 147,
      "diff": "--- Original\n+++ New\n@@ @@\n         $argument = '--' . $argument;\n-        if (strlen($argument) < $tabWidth) {\n+        if (strlen($argument) >= $tabWidth) {\n             $argument .= \"\\t\";\n         }\n \n         error_log(sprintf(\n             \"%s\\t%s\",\n             $argument,",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "???",
      "method": "printOptions",
      "line": 158,
      "diff": "--- Original\n+++ New\n@@ @@\n                 \"\\n\\t\\t\",\n-                true\n+                false\n             )\n         ));\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 41,
      "diff": "--- Original\n+++ New\n@@ @@\n             if (strpos($arg, '=')) {\n-                list($arg, $value) = explode('=', $arg, 2);\n+                list($arg, $value) = explode('=', $arg, 3);\n             }\n \n             if ($arg{0} == '-' && $name == $arg) {\n                 return $value;\n             }\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/EndsWith.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThan",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\EndsWith",
      "method": "fileEndsWith",
      "line": 37,
      "diff": "--- Original\n+++ New\n@@ @@\n         $length = strlen($needle);\n-        if (strlen($haystack) < $length) {\n+        if (strlen($haystack) <= $length) {\n             return $this->fileEndsWith($needle, $haystack);\n         }\n \n         return (substr($haystack, -$length) === $needle);\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 29,
      "diff": "--- Original\n+++ New\n@@ @@\n             !is_readable($this->fileLocation) &&\n-            strpos($this->fileLocation, \"php:\/\/\") !== 0\n+            strpos($this->fileLocation, \"php:\/\/\") !== 1\n         )) {\n             throw new InvalidArgumentException(\"Can't read file\");\n         }\n \n         $handle = fopen($this->fileLocation, 'r');\n ",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testNonExistantFile",
        "9": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "16": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "22": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "addInvalidLine",
      "line": 97,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if (!isset($this->invalidLines[$file][$line])) {\n+        if (isset($this->invalidLines[$file][$line])) {\n             $this->invalidLines[$file][$line] = [];\n         }\n \n         $this->invalidLines[$file][$line][] = $message->message;\n \n         if (in_array($message->source, $this->wholeFileErrors)) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCanMakeClass",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testWholeFileError",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    }
  ],
  "errored": [],
  "timeouts": [
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLines",
      "line": 40,
      "diff": "--- Original\n+++ New\n@@ @@\n         $lineNumber = 0;\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) !== true) {\n             $filename = $this->checkForFileName($line, $filename);\n             if ($lineNumber = $this->getLineNumber($line, $lineNumber)) {\n                 $error = $this->getMessage($line);\n                 $this->handleRelatedError($filename, $lineNumber, $error);\n \n                 $this->addError($filename, $lineNumber, $error);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "handleRelatedError",
      "line": 137,
      "diff": "--- Original\n+++ New\n@@ @@\n                 while ($currentLine < $reflection->getEndLine()) {\n-                    $this->addError($filename, $currentLine++, $error);\n+                    $this->addError($filename, $currentLine--, $error);\n                 }\n             }\n         }\n     }\n \n     \/**",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "matchFuzzyLines",
      "line": 82,
      "diff": "--- Original\n+++ New\n@@ @@\n             }\n-        } while (++$index < $fuzziness);\n+        } while (--$index < $fuzziness);\n \n         return $runTests;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThan",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "matchFuzzyLines",
      "line": 82,
      "diff": "--- Original\n+++ New\n@@ @@\n             }\n-        } while (++$index < $fuzziness);\n+        } while (++$index >= $fuzziness);\n \n         return $runTests;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "getLines",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n         $this->duplicateCode = [];\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) !== true) {\n             if (!$this->hasFileName($line)) {\n                 continue;\n             }\n \n             if ($this->startOfBlock($line)) {\n                 $this->handleEndOfBlock($block);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CodeClimateLoader.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\CoverageChecker\\CodeClimateLoader",
      "method": "addError",
      "line": 74,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        for ($lineNumber = $start; $lineNumber <= $end; $lineNumber++) {\n+        for ($lineNumber = $start; $lineNumber <= $end; $lineNumber--) {\n             $this->errors[$fileName][$lineNumber] = $message;\n         }\n     }\n \n     private function convertToJson($codeClimateFormat)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CodeClimateTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PhanJsonTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 137,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        for ($i = $start; $i <= $end; $i++) {\n+        for ($i = $start; $i <= $end; $i--) {\n             if ((\n                 !isset($this->errors[$currentFile][$i]) ||\n                 !in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMndLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhpMndLoader",
      "method": "getLines",
      "line": 19,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) !== true) {\n             $matches = [];\n             if (preg_match(\"\/^(?<filename>[^:]+):(?<lineNo>[0-9]+)\\. (?<message>.+)\/\", $line, $matches)) {\n                 $this->invalidLines\n                     [$matches['filename']]\n                     [$matches['lineNo']] = $matches['message'];\n             }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testGetOutput",
        "1": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testLinesReturnCorrect",
        "4": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhanTextLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhanTextLoader",
      "method": "getLines",
      "line": 38,
      "diff": "--- Original\n+++ New\n@@ @@\n         $handle = fopen($this->file, 'r');\n-        while (($line = fgets($handle)) !== false) {\n+        while (($line = fgets($handle)) !== true) {\n             if (!$this->checkForFile($line)) {\n                 continue;\n             }\n \n             $this->addError($line);\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhanTextTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PylintTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 36,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        while (($line = fgets($handle)) !== false) {\n+        while (($line = fgets($handle)) !== true) {\n             \/\/ process the line read.\n             $lineHandle = $this->getLineHandle($line);\n             $lineHandle->handle($line);\n             $this->diff->incrementCurrentPosition();\n         }\n ",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    }
  ],
  "killed": [
    {
      "file": "src\/DiffFileState.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\DiffFileState",
      "method": "addChangeLine",
      "line": 22,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->changeLines[$this->currentFile])) {\n+        if (isset($this->changeLines[$this->currentFile])) {\n             $this->changeLines[$this->currentFile] = [];\n         }\n         $this->changeLines[$this->currentFile][] = $this->currentPosition;\n     }\n \n     public function incrementCurrentPosition()",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "7": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "8": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "9": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileState.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\CoverageChecker\\DiffFileState",
      "method": "incrementCurrentPosition",
      "line": 30,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $this->currentPosition++;\n+        $this->currentPosition--;\n     }\n \n     public function decrementCurrentPosition()\n     {\n         $this->currentPosition--;\n     }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileState.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Decrement",
      "class": "\\exussum12\\CoverageChecker\\DiffFileState",
      "method": "decrementCurrentPosition",
      "line": 35,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $this->currentPosition--;\n+        $this->currentPosition++;\n     }\n \n     public function getChangedLines()\n     {\n         return array_map('array_unique', $this->changeLines);\n     }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "3": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "7": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "8": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "9": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileState.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\DiffFileState",
      "method": "getChangedLines",
      "line": 40,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return array_map('array_unique', $this->changeLines);\n+        array_map('array_unique', $this->changeLines); return null;\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\AddedLine",
      "method": "isValid",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] != \"+\";\n+        return $line[1] == '+' && $line[1] != \"+\";\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\AddedLine",
      "method": "isValid",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] != \"+\";\n+        return $line[0] != '+' && $line[1] != \"+\";\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\AddedLine",
      "method": "isValid",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] != \"+\";\n+        return $line[0] == '+' || $line[1] != \"+\";\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\AddedLine",
      "method": "isValid",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] != \"+\";\n+        return $line[0] == '+' && $line[0] != \"+\";\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotEqual",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\AddedLine",
      "method": "isValid",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] != \"+\";\n+        return $line[0] == '+' && $line[1] == \"+\";\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "handle",
      "line": 11,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (preg_match('#--- a?\/(?<filename>.*)#', $line, $match)) {\n+        if (!preg_match('#--- a?\/(?<filename>.*)#', $line, $match)) {\n             $this->diffFileState->setCurrentFile($match['filename']);\n         }\n     }\n \n     public function isValid($line)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "isValid",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-' && $line[1] == '-';\n+        return $line[1] == '-' && $line[1] == '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "isValid",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-' && $line[1] == '-';\n+        return $line[0] != '-' && $line[1] == '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "isValid",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-' && $line[1] == '-';\n+        return $line[0] == '-' || $line[1] == '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "isValid",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-' && $line[1] == '-';\n+        return $line[0] == '-' && $line[0] == '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\NewFile",
      "method": "isValid",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-' && $line[1] == '-';\n+        return $line[0] == '-' && $line[1] != '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/RemovedLine.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\RemovedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-';\n+        return $line[1] == '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/RemovedLine.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\RemovedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-';\n+        return $line[0] != '-';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "handle",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $oldFrom = $foundVariables[0];\n+        $oldFrom = $foundVariables[1];\n \n         $this->diffFileState->setCurrentPosition($oldFrom - 1);\n     }\n \n     public function isValid($line)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "handle",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $this->diffFileState->setCurrentPosition($oldFrom - 1);\n+        $this->diffFileState->setCurrentPosition($oldFrom + 1);\n     }\n \n     public function isValid($line)\n     {\n         return $line[0] == '@' && $line[1] == '@';\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "handle",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $this->diffFileState->setCurrentPosition($oldFrom - 1);\n+        $this->diffFileState->setCurrentPosition($oldFrom - 0);\n     }\n \n     public function isValid($line)\n     {\n         return $line[0] == '@' && $line[1] == '@';\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[1] == '@' && $line[1] == '@';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] != '@' && $line[1] == '@';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' || $line[1] == '@';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/OldVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\OldVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' && $line[1] != '@';\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\AddedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+';\n+        return $line[1] == '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/AddedLine.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\AddedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+';\n+        return $line[0] != '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "handle",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $currentFileName = $parsedLine[1];\n+        $currentFileName = $parsedLine[0];\n         if ($currentFileName) {\n             $this->diffFileState->setCurrentFile($currentFileName);\n         }\n     }\n \n     public function isValid($line)",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "3": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "4": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "5": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "7": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "isValid",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] == '+';\n+        return $line[1] == '+' && $line[1] == '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "isValid",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] == '+';\n+        return $line[0] != '+' && $line[1] == '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "isValid",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] == '+';\n+        return $line[0] == '+' || $line[1] == '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "isValid",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] == '+';\n+        return $line[0] == '+' && $line[0] == '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/NewFile.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\NewFile",
      "method": "isValid",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '+' && $line[1] == '+';\n+        return $line[0] == '+' && $line[1] != '+';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/RemovedLine.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\RemovedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-';\n+        return $line[1] == '-';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/RemovedLine.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\RemovedLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '-';\n+        return $line[0] != '-';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "handle",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $newFrom = $foundVariables[2];\n+        $newFrom = $foundVariables[3];\n \n         $this->diffFileState->setCurrentPosition($newFrom - 1);\n     }\n \n     public function isValid($line)\n     {",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "handle",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $this->diffFileState->setCurrentPosition($newFrom - 1);\n+        $this->diffFileState->setCurrentPosition($newFrom + 1);\n     }\n \n     public function isValid($line)\n     {\n         return $line[0] == '@' && $line[1] == '@';\n     }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "handle",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        $this->diffFileState->setCurrentPosition($newFrom - 1);\n+        $this->diffFileState->setCurrentPosition($newFrom - 0);\n     }\n \n     public function isValid($line)\n     {\n         return $line[0] == '@' && $line[1] == '@';\n     }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[1] == '@' && $line[1] == '@';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] != '@' && $line[1] == '@';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' || $line[1] == '@';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/NewVersion\/DiffStart.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\NewVersion\\DiffStart",
      "method": "isValid",
      "line": 23,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $line[0] == '@' && $line[1] == '@';\n+        return $line[0] == '@' && $line[1] != '@';\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "5": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "6": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "7": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "8": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "10": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "11": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "13": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "14": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "15": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffLineHandle\/ContextLine.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\DiffLineHandle\\ContextLine",
      "method": "isValid",
      "line": 16,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testEnsureContextLineIsValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "getCoveredLines",
      "line": 76,
      "diff": "--- Original\n+++ New\n@@ @@\n             $matchedFile = $this->findFile($file, $coveredFiles);\n-            if ($matchedFile !== false) {\n+            if ($matchedFile === false) {\n                 $this->matchLines($file, $matchedFile);\n             }\n         }\n \n         return [\n             'uncoveredLines' => $this->uncoveredLines,",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "getCoveredLines",
      "line": 76,
      "diff": "--- Original\n+++ New\n@@ @@\n             $matchedFile = $this->findFile($file, $coveredFiles);\n-            if ($matchedFile !== false) {\n+            if ($matchedFile !== true) {\n                 $this->matchLines($file, $matchedFile);\n             }\n         }\n \n         return [\n             'uncoveredLines' => $this->uncoveredLines,",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "addUnCoveredLine",
      "line": 94,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->uncoveredLines[$file])) {\n+        if (isset($this->uncoveredLines[$file])) {\n             $this->uncoveredLines[$file] = [];\n         }\n \n         $this->uncoveredLines[$file][$line] = $message;\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "addCoveredLine",
      "line": 107,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->coveredLines[$file])) {\n+        if (isset($this->coveredLines[$file])) {\n             $this->coveredLines[$file] = [];\n         }\n \n         $this->coveredLines[$file][] = $line;\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "addUnCoveredFile",
      "line": 155,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->cache->diff[$file] as $line) {\n-            $this->addUnCoveredLine($file, $line, 0);\n+            $this->addUnCoveredLine($file, $line, 1);\n         }\n     }\n \n     protected function getDiff()\n     {\n         if (empty($this->cache->diff)) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "handleFileNotFound",
      "line": 181,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if ($unMatchedFile === true) {\n+        if ($unMatchedFile !== true) {\n             $this->addCoveredFile($file);\n         }\n \n         if ($unMatchedFile === false) {\n             $this->addUnCoveredFile($file);\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "handleFileNotFound",
      "line": 181,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if ($unMatchedFile === true) {\n+        if ($unMatchedFile === false) {\n             $this->addCoveredFile($file);\n         }\n \n         if ($unMatchedFile === false) {\n             $this->addUnCoveredFile($file);\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "handleFileNotFound",
      "line": 185,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if ($unMatchedFile === false) {\n+        if ($unMatchedFile !== false) {\n             $this->addUnCoveredFile($file);\n         }\n     }\n \n     protected function findFile($file, $coveredFiles)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "handleFileNotFound",
      "line": 185,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        if ($unMatchedFile === false) {\n+        if ($unMatchedFile === true) {\n             $this->addUnCoveredFile($file);\n         }\n     }\n \n     protected function findFile($file, $coveredFiles)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CoverageCheck.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\CoverageCheck",
      "method": "findFile",
      "line": 196,
      "diff": "--- Original\n+++ New\n@@ @@\n             $this->handleFileNotFound($file);\n-            return false;\n+            return true;\n         }\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLines",
      "line": 40,
      "diff": "--- Original\n+++ New\n@@ @@\n         $lineNumber = 0;\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) === false) {\n             $filename = $this->checkForFileName($line, $filename);\n             if ($lineNumber = $this->getLineNumber($line, $lineNumber)) {\n                 $error = $this->getMessage($line);\n                 $this->handleRelatedError($filename, $lineNumber, $error);\n \n                 $this->addError($filename, $lineNumber, $error);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "handleNotFoundFile",
      "line": 69,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * @param string $line\n      * @param string $currentFile\n      * @return string the currentFileName",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testNotFoundFile"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "checkForFilename",
      "line": 79,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (strpos($line, \" Line \")) {\n+        if (!strpos($line, \" Line \")) {\n             return trim(str_replace('Line', '', $line));\n         }\n         return $currentFile;\n     }\n \n     protected function getLineNumber($line, $currentLineNumber)",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "checkForFilename",
      "line": 80,
      "diff": "--- Original\n+++ New\n@@ @@\n         if (strpos($line, \" Line \")) {\n-            return trim(str_replace('Line', '', $line));\n+            trim(str_replace('Line', '', $line)); return null;\n         }\n         return $currentFile;\n     }\n \n     protected function getLineNumber($line, $currentLineNumber)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLineNumber",
      "line": 88,
      "diff": "--- Original\n+++ New\n@@ @@\n         $matches = [];\n-        if (!preg_match($this->lineRegex, $line, $matches)) {\n+        if (preg_match($this->lineRegex, $line, $matches)) {\n             if (preg_match('#^\\s{3,}#', $line)) {\n                 return $currentLineNumber;\n             }\n \n             return false;\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLineNumber",
      "line": 89,
      "diff": "--- Original\n+++ New\n@@ @@\n         if (!preg_match($this->lineRegex, $line, $matches)) {\n-            if (preg_match('#^\\s{3,}#', $line)) {\n+            if (!preg_match('#^\\s{3,}#', $line)) {\n                 return $currentLineNumber;\n             }\n \n             return false;\n         }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getLineNumber",
      "line": 93,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            return false;\n+            return true;\n         }\n \n         return $matches['lineNumber'];\n     }\n \n     protected function getMessage($line)",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "getMessage",
      "line": 101,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return trim(preg_replace($this->lineRegex, '', $line));\n+        trim(preg_replace($this->lineRegex, '', $line)); return null;\n     }\n \n     protected function trimLines()\n     {\n         array_walk_recursive($this->invalidLines, function (&$item) {\n             if (is_string($item)) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "handleRelatedError",
      "line": 134,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reflection = $this->getReflector($matches);\n-            if ($reflection && ($filename = $reflection->getFileName())) {\n+            if ($reflection || ($filename = $reflection->getFileName())) {\n                 $currentLine = $reflection->getStartLine();\n                 while ($currentLine < $reflection->getEndLine()) {\n                     $this->addError($filename, $currentLine++, $error);\n                 }\n             }\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThan",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "handleRelatedError",
      "line": 136,
      "diff": "--- Original\n+++ New\n@@ @@\n                 $currentLine = $reflection->getStartLine();\n-                while ($currentLine < $reflection->getEndLine()) {\n+                while ($currentLine >= $reflection->getEndLine()) {\n                     $this->addError($filename, $currentLine++, $error);\n                 }\n             }\n         }\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpStanLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpStanLoader",
      "method": "addError",
      "line": 150,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->invalidLines[$filename][$lineNumber])) {\n+        if (isset($this->invalidLines[$filename][$lineNumber])) {\n             $this->invalidLines[$filename][$lineNumber] = '';\n         }\n         $this->invalidLines[$filename][$lineNumber] .= $error . ' ';\n     }\n \n     \/**",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testGetOutput",
        "exussum12\\CoverageChecker\\tests\\PhpStanTest::testInvalidLine"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "addLine",
      "line": 47,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"line\"\n+            $reader->name !== \"line\"\n         )) {\n             $this->coveredLines\n             [$currentFile]\n             [$reader->getAttribute('nr')]\n                 = $reader->getAttribute(\"mi\") == 0;\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "addLine",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n             [$reader->getAttribute('nr')]\n-                = $reader->getAttribute(\"mi\") == 0;\n+                = $reader->getAttribute(\"mi\") != 0;\n         }\n     }\n \n     protected function findFile($reader, $currentNamespace, $currentFile)\n     {\n         if ((",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "addLine",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n             [$reader->getAttribute('nr')]\n-                = $reader->getAttribute(\"mi\") == 0;\n+                = $reader->getAttribute(\"mi\") == 1;\n         }\n     }\n \n     protected function findFile($reader, $currentNamespace, $currentFile)\n     {\n         if ((",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findFile",
      "line": 59,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"sourcefile\" &&\n+            $reader->name !== \"sourcefile\" &&\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentFile = $currentNamespace . '\/' . $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findFile",
      "line": 59,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"sourcefile\" &&\n+            $reader->name === \"sourcefile\" ||\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentFile = $currentNamespace . '\/' . $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findFile",
      "line": 60,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === \"sourcefile\" &&\n-            $reader->nodeType == XMLReader::ELEMENT\n+            $reader->nodeType != XMLReader::ELEMENT\n         )) {\n             $currentFile = $currentNamespace . '\/' . $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n \n         return $currentFile;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findNamespace",
      "line": 72,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"package\" &&\n+            $reader->name !== \"package\" &&\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentNamespace = $reader->getAttribute('name');\n         }\n         return $currentNamespace;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findNamespace",
      "line": 72,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"package\" &&\n+            $reader->name === \"package\" ||\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentNamespace = $reader->getAttribute('name');\n         }\n         return $currentNamespace;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/JacocoReport.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\JacocoReport",
      "method": "findNamespace",
      "line": 73,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === \"package\" &&\n-            $reader->nodeType == XMLReader::ELEMENT\n+            $reader->nodeType != XMLReader::ELEMENT\n         )) {\n             $currentNamespace = $reader->getAttribute('name');\n         }\n         return $currentNamespace;\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\JacocoLoaderTest::testLoadXML"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "__construct",
      "line": 13,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!is_readable(($coveragePhp))) {\n+        if (is_readable(($coveragePhp))) {\n             throw new Exception(\"Coverage File not found\");\n         }\n         $this->coverage = include($coveragePhp);\n         $this->diff = $diff;\n         $this->matcher = $matcher;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testBadFilesPassedIn",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\BracketedStatement",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "endsWith",
      "line": 46,
      "diff": "--- Original\n+++ New\n@@ @@\n         $length = strlen($needle);\n-        return (substr($haystack, -$length) === $needle);\n+        (substr($haystack, -$length) === $needle); return null;\n     }\n \n     protected function stripFileExtension($file)\n     {\n         $ext = \".php\";\n         return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "endsWith",
      "line": 46,
      "diff": "--- Original\n+++ New\n@@ @@\n         $length = strlen($needle);\n-        return (substr($haystack, -$length) === $needle);\n+        return (substr($haystack, +$length) === $needle);\n     }\n \n     protected function stripFileExtension($file)\n     {\n         $ext = \".php\";\n         return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "endsWith",
      "line": 46,
      "diff": "--- Original\n+++ New\n@@ @@\n         $length = strlen($needle);\n-        return (substr($haystack, -$length) === $needle);\n+        return (substr($haystack, -$length) !== $needle);\n     }\n \n     protected function stripFileExtension($file)\n     {\n         $ext = \".php\";\n         return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "stripFileExtension",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n         $ext = \".php\";\n-        return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));\n+        str_replace('\/', '\\\\', substr($file, 0, -strlen($ext))); return null;\n     }\n \n     protected function groupTestsBySuite($tests)\n     {\n         $groupedTests = [];\n         foreach ($tests as $test) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "stripFileExtension",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n         $ext = \".php\";\n-        return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));\n+        return str_replace('\/', '\\\\', substr($file, 1, -strlen($ext)));\n     }\n \n     protected function groupTestsBySuite($tests)\n     {\n         $groupedTests = [];\n         foreach ($tests as $test) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "stripFileExtension",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n         $ext = \".php\";\n-        return str_replace('\/', '\\\\', substr($file, 0, -strlen($ext)));\n+        return str_replace('\/', '\\\\', substr($file, 0, +strlen($ext)));\n     }\n \n     protected function groupTestsBySuite($tests)\n     {\n         $groupedTests = [];\n         foreach ($tests as $test) {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThan",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "groupTestsBySuite",
      "line": 62,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if (strpos($test, '::') > 0) {\n+            if (strpos($test, '::') >= 0) {\n                 list ($suite, $testName) = explode('::', $test);\n             }\n             $groupedTests[$suite][] = $testName;\n         }\n         return $groupedTests;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpunitFilter.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThan",
      "class": "\\exussum12\\coverageChecker\\PhpunitFilter",
      "method": "groupTestsBySuite",
      "line": 62,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if (strpos($test, '::') > 0) {\n+            if (strpos($test, '::') <= 0) {\n                 list ($suite, $testName) = explode('::', $test);\n             }\n             $groupedTests[$suite][] = $testName;\n         }\n         return $groupedTests;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "getLines",
      "line": 17,
      "diff": "--- Original\n+++ New\n@@ @@\n         $this->duplicateCode = [];\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) === false) {\n             if (!$this->hasFileName($line)) {\n                 continue;\n             }\n \n             if ($this->startOfBlock($line)) {\n                 $this->handleEndOfBlock($block);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "getLines",
      "line": 18,
      "diff": "--- Original\n+++ New\n@@ @@\n         while (($line = fgets($this->file)) !== false) {\n-            if (!$this->hasFileName($line)) {\n+            if ($this->hasFileName($line)) {\n                 continue;\n             }\n \n             if ($this->startOfBlock($line)) {\n                 $this->handleEndOfBlock($block);\n                 $block = [];",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\PlusEqual",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "getLines",
      "line": 27,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            $block += $this->addFoundBlock($line);\n+            $block -= $this->addFoundBlock($line);\n         }\n \n         return $this->duplicateCode;\n     }\n \n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "handleNotFoundFile",
      "line": 41,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     public static function getDescription()\n     {\n         return \"Parses the text output from phpcpd (Copy Paste Detect)\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testNotFoundFile"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "startOfBlock",
      "line": 51,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return preg_match('\/^\\s+-\/', $line);\n+        preg_match('\/^\\s+-\/', $line); return null;\n     }\n \n     private function hasFileName($line)\n     {\n         return preg_match('\/:\\d+-\\d+\/', $line);\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "hasFileName",
      "line": 56,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return preg_match('\/:\\d+-\\d+\/', $line);\n+        preg_match('\/:\\d+-\\d+\/', $line); return null;\n     }\n \n     private function addFoundBlock($line)\n     {\n         $matches = [];\n         preg_match('\/\\s+(?:- )?(?<fileName>.*?):(?<startLine>\\d+)-(?<endLine>\\d+)$\/', $line, $matches);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Phpcpd.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\Phpcpd",
      "method": "handleEndOfBlock",
      "line": 71,
      "diff": "--- Original\n+++ New\n@@ @@\n                 foreach ($block as $duplicate => $dupeLines) {\n-                    if ($filename == $duplicate) {\n+                    if ($filename != $duplicate) {\n                         continue;\n                     }\n                     $start = reset($dupeLines);\n                     $end = end($dupeLines);\n                     $message = \"Duplicate of \" . $duplicate . ':' . $start . '-' . $end;\n                     $this->duplicateCode[$filename][$lineNumber][] = $message;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpcpdTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CodeClimateLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\CodeClimateLoader",
      "method": "handleNotFoundFile",
      "line": 55,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CodeClimateTest::testNotFoundFile",
        "exussum12\\CoverageChecker\\tests\\PhanJsonTest::testNotFoundFile"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CodeClimateLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\CodeClimateLoader",
      "method": "addError",
      "line": 74,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        for ($lineNumber = $start; $lineNumber <= $end; $lineNumber++) {\n+        for ($lineNumber = $start; $lineNumber < $end; $lineNumber++) {\n             $this->errors[$fileName][$lineNumber] = $message;\n         }\n     }\n \n     private function convertToJson($codeClimateFormat)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CodeClimateTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PhanJsonTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CodeClimateLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\CodeClimateLoader",
      "method": "addError",
      "line": 74,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        for ($lineNumber = $start; $lineNumber <= $end; $lineNumber++) {\n+        for ($lineNumber = $start; $lineNumber > $end; $lineNumber++) {\n             $this->errors[$fileName][$lineNumber] = $message;\n         }\n     }\n \n     private function convertToJson($codeClimateFormat)\n     {",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CodeClimateTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PhanJsonTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 60,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $valid = true;\n+        $valid = false;\n         foreach ($this->errorRanges[$file] as $number => $errors) {\n             if ((\n                 $errors['start'] <= $lineNumber &&\n                 $errors['end'] >= $lineNumber\n             )) {\n                 \/\/unset this error",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 63,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                $errors['start'] <= $lineNumber &&\n+                $errors['start'] < $lineNumber &&\n                 $errors['end'] >= $lineNumber\n             )) {\n                 \/\/unset this error\n                 unset($this->errorRanges[$file][$number]);\n                 $valid = false;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 63,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                $errors['start'] <= $lineNumber &&\n+                $errors['start'] > $lineNumber &&\n                 $errors['end'] >= $lineNumber\n             )) {\n                 \/\/unset this error\n                 unset($this->errorRanges[$file][$number]);\n                 $valid = false;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 64,
      "diff": "--- Original\n+++ New\n@@ @@\n                 $errors['start'] <= $lineNumber &&\n-                $errors['end'] >= $lineNumber\n+                $errors['end'] < $lineNumber\n             )) {\n                 \/\/unset this error\n                 unset($this->errorRanges[$file][$number]);\n                 $valid = false;\n             }\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "isValidLine",
      "line": 68,
      "diff": "--- Original\n+++ New\n@@ @@\n                 unset($this->errorRanges[$file][$number]);\n-                $valid = false;\n+                $valid = true;\n             }\n         }\n \n         return $valid;\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForViolation",
      "line": 82,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === 'violation' &&\n+            $reader->name !== 'violation' &&\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $error = trim($reader->readString());\n             $start = $reader->getAttribute('beginline');\n             $end = $reader->getAttribute('endline');\n             $this->errorRanges[$currentFile][] = [",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForViolation",
      "line": 82,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === 'violation' &&\n+            $reader->name === 'violation' ||\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $error = trim($reader->readString());\n             $start = $reader->getAttribute('beginline');\n             $end = $reader->getAttribute('endline');\n             $this->errorRanges[$currentFile][] = [",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForViolation",
      "line": 83,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === 'violation' &&\n-            $reader->nodeType == XMLReader::ELEMENT\n+            $reader->nodeType != XMLReader::ELEMENT\n         )) {\n             $error = trim($reader->readString());\n             $start = $reader->getAttribute('beginline');\n             $end = $reader->getAttribute('endline');\n             $this->errorRanges[$currentFile][] = [\n                 'start' => $start,",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForNewFile",
      "line": 106,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === 'file' &&\n+            $reader->name !== 'file' &&\n             $reader->nodeType == XMLReader::ELEMENT\n         )\n         ) {\n             $currentFile = $reader->getAttribute('name');\n             $this->errors[$currentFile] = [];\n             return $currentFile;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForNewFile",
      "line": 106,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === 'file' &&\n+            $reader->name === 'file' ||\n             $reader->nodeType == XMLReader::ELEMENT\n         )\n         ) {\n             $currentFile = $reader->getAttribute('name');\n             $this->errors[$currentFile] = [];\n             return $currentFile;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "checkForNewFile",
      "line": 107,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === 'file' &&\n-            $reader->nodeType == XMLReader::ELEMENT\n+            $reader->nodeType != XMLReader::ELEMENT\n         )\n         ) {\n             $currentFile = $reader->getAttribute('name');\n             $this->errors[$currentFile] = [];\n             return $currentFile;\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "handleNotFoundFile",
      "line": 122,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testCorrectMissingFile",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testCorrectMissingFile",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 137,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        for ($i = $start; $i <= $end; $i++) {\n+        for ($i = $start; $i < $end; $i++) {\n             if ((\n                 !isset($this->errors[$currentFile][$i]) ||\n                 !in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 137,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        for ($i = $start; $i <= $end; $i++) {\n+        for ($i = $start; $i > $end; $i++) {\n             if ((\n                 !isset($this->errors[$currentFile][$i]) ||\n                 !in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 139,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                !isset($this->errors[$currentFile][$i]) ||\n+                isset($this->errors[$currentFile][$i]) ||\n                 !in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }\n         }\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalOr",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 139,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                !isset($this->errors[$currentFile][$i]) ||\n+                !isset($this->errors[$currentFile][$i]) &&\n                 !in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }\n         }\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMdLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpMdLoader",
      "method": "addForAllLines",
      "line": 140,
      "diff": "--- Original\n+++ New\n@@ @@\n                 !isset($this->errors[$currentFile][$i]) ||\n-                !in_array($error, $this->errors[$currentFile][$i])\n+                in_array($error, $this->errors[$currentFile][$i])\n             )) {\n                 $this->errors[$currentFile][$i][] = $error;\n             }\n         }\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportStrictTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\LoadPhpMdReportTest::testClassCanLoad",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "isValidLine",
      "line": 54,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->coveredLines[$file][$line])) {\n+        if (isset($this->coveredLines[$file][$line])) {\n             return null;\n         }\n \n         return $this->coveredLines[$file][$line] > 0;\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "isValidLine",
      "line": 58,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return $this->coveredLines[$file][$line] > 0;\n+        return $this->coveredLines[$file][$line] > 1;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public function handleNotFoundFile()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThan",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "isValidLine",
      "line": 58,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return $this->coveredLines[$file][$line] > 0;\n+        return $this->coveredLines[$file][$line] >= 0;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public function handleNotFoundFile()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThan",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "isValidLine",
      "line": 58,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return $this->coveredLines[$file][$line] > 0;\n+        return $this->coveredLines[$file][$line] <= 0;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public function handleNotFoundFile()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "isValidLine",
      "line": 58,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return $this->coveredLines[$file][$line] > 0;\n+        return $this->coveredLines[$file][$line] > 1;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public function handleNotFoundFile()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "checkForNewFiles",
      "line": 80,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"file\" &&\n+            $reader->name !== \"file\" &&\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentFile = $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n         return $currentFile;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "checkForNewFiles",
      "line": 80,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"file\" &&\n+            $reader->name === \"file\" ||\n             $reader->nodeType == XMLReader::ELEMENT\n         )) {\n             $currentFile = $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n         return $currentFile;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "checkForNewFiles",
      "line": 81,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === \"file\" &&\n-            $reader->nodeType == XMLReader::ELEMENT\n+            $reader->nodeType != XMLReader::ELEMENT\n         )) {\n             $currentFile = $reader->getAttribute('name');\n             $this->coveredLines[$currentFile] = [];\n         }\n         return $currentFile;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThan",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "addLine",
      "line": 95,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $covered = $reader->getAttribute('count') > 0;\n+        $covered = $reader->getAttribute('count') >= 0;\n \n         $this->coveredLines\n         [$currentFile]\n         [$reader->getAttribute('num')]\n             = $covered ?: \"No test coverage\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThan",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "addLine",
      "line": 95,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $covered = $reader->getAttribute('count') > 0;\n+        $covered = $reader->getAttribute('count') <= 0;\n \n         $this->coveredLines\n         [$currentFile]\n         [$reader->getAttribute('num')]\n             = $covered ?: \"No test coverage\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "addLine",
      "line": 95,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $covered = $reader->getAttribute('count') > 0;\n+        $covered = $reader->getAttribute('count') > 1;\n \n         $this->coveredLines\n         [$currentFile]\n         [$reader->getAttribute('num')]\n             = $covered ?: \"No test coverage\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "handleStatement",
      "line": 106,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"line\" &&\n+            $reader->name !== \"line\" &&\n             $reader->getAttribute(\"type\") == \"stmt\"\n         )) {\n             $this->addLine($reader, $currentFile);\n         }\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "handleStatement",
      "line": 106,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            $reader->name === \"line\" &&\n+            $reader->name === \"line\" ||\n             $reader->getAttribute(\"type\") == \"stmt\"\n         )) {\n             $this->addLine($reader, $currentFile);\n         }\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CloverLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\CloverLoader",
      "method": "handleStatement",
      "line": 107,
      "diff": "--- Original\n+++ New\n@@ @@\n             $reader->name === \"line\" &&\n-            $reader->getAttribute(\"type\") == \"stmt\"\n+            $reader->getAttribute(\"type\") != \"stmt\"\n         )) {\n             $this->addLine($reader, $currentFile);\n         }\n     }\n }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadCloverReportTest::testLoadXML",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMndLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\PhpMndLoader",
      "method": "getLines",
      "line": 19,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        while (($line = fgets($this->file)) !== false) {\n+        while (($line = fgets($this->file)) === false) {\n             $matches = [];\n             if (preg_match(\"\/^(?<filename>[^:]+):(?<lineNo>[0-9]+)\\. (?<message>.+)\/\", $line, $matches)) {\n                 $this->invalidLines\n                     [$matches['filename']]\n                     [$matches['lineNo']] = $matches['message'];\n             }",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testGetOutput",
        "1": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testLinesReturnCorrect",
        "4": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMndLoader.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "\\exussum12\\CoverageChecker\\PhpMndLoader",
      "method": "getLines",
      "line": 21,
      "diff": "--- Original\n+++ New\n@@ @@\n             $matches = [];\n-            if (preg_match(\"\/^(?<filename>[^:]+):(?<lineNo>[0-9]+)\\. (?<message>.+)\/\", $line, $matches)) {\n+            if (!preg_match(\"\/^(?<filename>[^:]+):(?<lineNo>[0-9]+)\\. (?<message>.+)\/\", $line, $matches)) {\n                 $this->invalidLines\n                     [$matches['filename']]\n                     [$matches['lineNo']] = $matches['message'];\n             }\n         }\n ",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testGetOutput",
        "1": "exussum12\\CoverageChecker\\tests\\PhpMndTest::testLinesReturnCorrect",
        "4": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpMndLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhpMndLoader",
      "method": "handleNotFoundFile",
      "line": 48,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpMndTest::testInvalidFile",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhanTextLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\PhanTextLoader",
      "method": "getLines",
      "line": 38,
      "diff": "--- Original\n+++ New\n@@ @@\n         $handle = fopen($this->file, 'r');\n-        while (($line = fgets($handle)) !== false) {\n+        while (($line = fgets($handle)) === false) {\n             if (!$this->checkForFile($line)) {\n                 continue;\n             }\n \n             $this->addError($line);\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhanTextTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PylintTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhanTextLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhanTextLoader",
      "method": "getLines",
      "line": 39,
      "diff": "--- Original\n+++ New\n@@ @@\n         while (($line = fgets($handle)) !== false) {\n-            if (!$this->checkForFile($line)) {\n+            if ($this->checkForFile($line)) {\n                 continue;\n             }\n \n             $this->addError($line);\n         }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhanTextTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PylintTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhanTextLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhanTextLoader",
      "method": "handleNotFoundFile",
      "line": 62,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhanTextTest::testNotFoundFile",
        "exussum12\\CoverageChecker\\tests\\PylintTest::testNotFoundFile"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhanTextLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\PhanTextLoader",
      "method": "checkForFile",
      "line": 75,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return preg_match($this->lineMatch, $line);\n+        preg_match($this->lineMatch, $line); return null;\n     }\n \n     private function addError($line)\n     {\n         $matches = [];\n         preg_match($this->lineMatch, $line, $matches);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhanTextTest::testOutput",
        "exussum12\\CoverageChecker\\tests\\PylintTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "output",
      "line": 14,
      "diff": "--- Original\n+++ New\n@@ @@\n         $this->violations = ['files' => []];\n-        $total = 0;\n+        $total = 1;\n         foreach ($coverage as $file => $lines) {\n             foreach ($lines as $line => $errors) {\n                 $this->displayErrors($errors, $file, $line);\n             }\n             $total++;\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testSuccessfulOutput",
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Increment",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "output",
      "line": 19,
      "diff": "--- Original\n+++ New\n@@ @@\n             }\n-            $total++;\n+            $total--;\n         }\n \n         $this->addTotal($total);\n \n         echo json_encode($this->violations) . \"\\n\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "displayErrors",
      "line": 34,
      "diff": "--- Original\n+++ New\n@@ @@\n                 'source' => 'diffFilter',\n-                'severity' => 1,\n+                'severity' => 0,\n                 'type' => 'ERROR',\n                 'line' => $line,\n                 'column' => 1,\n                 'fixable' => 'false',\n             ];\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "displayErrors",
      "line": 37,
      "diff": "--- Original\n+++ New\n@@ @@\n                 'line' => $line,\n-                'column' => 1,\n+                'column' => 0,\n                 'fixable' => 'false',\n             ];\n \n             $current['errors'] = count(\n                 $current['messages']\n             );",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "displayErrors",
      "line": 44,
      "diff": "--- Original\n+++ New\n@@ @@\n             );\n-            $current['warnings'] = 0;\n+            $current['warnings'] = 1;\n         }\n     }\n \n     protected function addTotal($total)\n     {\n         $this->violations['totals'] = [",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "addTotal",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n             'errors' => $total,\n-            'fixable' => 0,\n+            'fixable' => 1,\n             'warnings' => 0,\n         ];\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testSuccessfulOutput",
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Phpcs.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Phpcs",
      "method": "addTotal",
      "line": 53,
      "diff": "--- Original\n+++ New\n@@ @@\n             'fixable' => 0,\n-            'warnings' => 0,\n+            'warnings' => 1,\n         ];\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testSuccessfulOutput",
        "exussum12\\CoverageChecker\\tests\\Outputs\\PhpcsTest::testFailedOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Text.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Text",
      "method": "generateOutputLine",
      "line": 27,
      "diff": "--- Original\n+++ New\n@@ @@\n         $output = \"Line $line:\\n\";\n-        if (!empty($message)) {\n+        if (empty($message)) {\n             foreach ((array) $message as $part) {\n                 $output .= \"\\t$part\\n\";\n             }\n         }\n \n         return $output . \"\\n\";",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Json.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Json",
      "method": "output",
      "line": 21,
      "diff": "--- Original\n+++ New\n@@ @@\n         $output = (object) [\n-            'coverage' => number_format($percent, 2),\n+            'coverage' => number_format($percent, 3),\n             'status' => $percent >= $minimumPercent ?\n                 'Passed':\n                 'Failed',\n             'violations' => $violations\n         ];\n         echo json_encode($output) . \"\\n\";",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Json.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Json",
      "method": "output",
      "line": 22,
      "diff": "--- Original\n+++ New\n@@ @@\n             'coverage' => number_format($percent, 2),\n-            'status' => $percent >= $minimumPercent ?\n+            'status' => $percent > $minimumPercent ?\n                 'Passed':\n                 'Failed',\n             'violations' => $violations\n         ];\n         echo json_encode($output) . \"\\n\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/Outputs\/Json.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThanOrEqualTo",
      "class": "\\exussum12\\CoverageChecker\\Outputs\\Json",
      "method": "output",
      "line": 22,
      "diff": "--- Original\n+++ New\n@@ @@\n             'coverage' => number_format($percent, 2),\n-            'status' => $percent >= $minimumPercent ?\n+            'status' => $percent < $minimumPercent ?\n                 'Passed':\n                 'Failed',\n             'violations' => $violations\n         ];\n         echo json_encode($output) . \"\\n\";\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "???",
      "method": "handleOutput",
      "line": 84,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    if ($coveredLines + $uncoveredLines == 0) {\n+    if ($coveredLines + $uncoveredLines != 0) {\n         error_log('No lines found!');\n         return;\n     }\n \n     $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "handleOutput",
      "line": 84,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    if ($coveredLines + $uncoveredLines == 0) {\n+    if ($coveredLines + $uncoveredLines == 1) {\n         error_log('No lines found!');\n         return;\n     }\n \n     $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "handleOutput",
      "line": 89,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n+    $percentCovered = 101 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n \n     $output->output(\n         $lines['uncoveredLines'],\n         $percentCovered,\n         $minimumPercentCovered\n     );",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Multiplication",
      "class": "???",
      "method": "handleOutput",
      "line": 89,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n+    $percentCovered = 100 \/ ($coveredLines \/ ($coveredLines + $uncoveredLines));\n \n     $output->output(\n         $lines['uncoveredLines'],\n         $percentCovered,\n         $minimumPercentCovered\n     );",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Division",
      "class": "???",
      "method": "handleOutput",
      "line": 89,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n+    $percentCovered = 100 * ($coveredLines * ($coveredLines + $uncoveredLines));\n \n     $output->output(\n         $lines['uncoveredLines'],\n         $percentCovered,\n         $minimumPercentCovered\n     );",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Addition",
      "class": "???",
      "method": "handleOutput",
      "line": 89,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    $percentCovered = 100 * ($coveredLines \/ ($coveredLines + $uncoveredLines));\n+    $percentCovered = 100 * ($coveredLines \/ ($coveredLines - $uncoveredLines));\n \n     $output->output(\n         $lines['uncoveredLines'],\n         $percentCovered,\n         $minimumPercentCovered\n     );",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalBoundary\\GreaterThanOrEqualTo",
      "class": "???",
      "method": "handleOutput",
      "line": 97,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    if ($percentCovered >= $minimumPercentCovered) {\n+    if ($percentCovered > $minimumPercentCovered) {\n         return;\n     }\n \n     throw new Exception(\n         'Failing due to coverage being lower than threshold',\n         2",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\GreaterThanOrEqualTo",
      "class": "???",
      "method": "handleOutput",
      "line": 97,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-    if ($percentCovered >= $minimumPercentCovered) {\n+    if ($percentCovered < $minimumPercentCovered) {\n         return;\n     }\n \n     throw new Exception(\n         'Failing due to coverage being lower than threshold',\n         2",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/functions.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "???",
      "method": "handleOutput",
      "line": 103,
      "diff": "--- Original\n+++ New\n@@ @@\n         'Failing due to coverage being lower than threshold',\n-        2\n+        3\n     );\n }\n \n function calculateLines($lines)\n {\n     return count($lines, COUNT_RECURSIVE) - count($lines);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\IfStatement\\FunctionCallNegation",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "getArg",
      "line": 15,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (is_numeric($name)) {\n+        if (!is_numeric($name)) {\n             return $this->numericArg($name);\n         }\n \n         return $this->letterArg($name);\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWrongArgs",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{1} != '-' && $position-- == 0) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotEqual",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{0} == '-' && $position-- == 0) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{0} != '-' || $position-- == 0) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Increment\\Decrement",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{0} != '-' && $position++ == 0) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{0} != '-' && $position-- != 0) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "numericArg",
      "line": 25,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            if ($arg{0} != '-' && $position-- == 0) {\n+            if ($arg{0} != '-' && $position-- == 1) {\n                 return $arg;\n             }\n         }\n \n         return null;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testNumericArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 35,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $name = strlen($name) == 1 ?\n+        $name = strlen($name) != 1 ?\n             '-' . $name :\n             '--' . $name;\n         foreach ($this->args as $arg) {\n             $value = true;\n             if (strpos($arg, '=')) {\n                 list($arg, $value) = explode('=', $arg, 2);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 35,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        $name = strlen($name) == 1 ?\n+        $name = strlen($name) == 0 ?\n             '-' . $name :\n             '--' . $name;\n         foreach ($this->args as $arg) {\n             $value = true;\n             if (strpos($arg, '=')) {\n                 list($arg, $value) = explode('=', $arg, 2);",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 39,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($this->args as $arg) {\n-            $value = true;\n+            $value = false;\n             if (strpos($arg, '=')) {\n                 list($arg, $value) = explode('=', $arg, 2);\n             }\n \n             if ($arg{0} == '-' && $name == $arg) {\n                 return $value;",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Number\\IntegerValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 44,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if ($arg{0} == '-' && $name == $arg) {\n+            if ($arg{1} == '-' && $name == $arg) {\n                 return $value;\n             }\n         }\n \n         return false;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 44,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if ($arg{0} == '-' && $name == $arg) {\n+            if ($arg{0} != '-' && $name == $arg) {\n                 return $value;\n             }\n         }\n \n         return false;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 44,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if ($arg{0} == '-' && $name == $arg) {\n+            if ($arg{0} == '-' || $name == $arg) {\n                 return $value;\n             }\n         }\n \n         return false;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 44,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if ($arg{0} == '-' && $name == $arg) {\n+            if ($arg{0} == '-' && $name != $arg) {\n                 return $value;\n             }\n         }\n \n         return false;\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testArgumentsWithValues",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/ArgParser.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\ArgParser",
      "method": "letterArg",
      "line": 49,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return false;\n+        return true;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\ArgParserTest::testAlphaArgs",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testMissingHandler",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/FileMapper.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\FileMapper",
      "method": "checkMapping",
      "line": 54,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return $file == str_replace(\n+        return $file != str_replace(\n             $this->originalPath,\n             $this->newPath,\n             $needle\n         );\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\FileMatchers\\FileMapperTest::testPrefix"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/Prefix.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\Prefix",
      "method": "match",
      "line": 33,
      "diff": "--- Original\n+++ New\n@@ @@\n         foreach ($haystack as $file) {\n-            if ($file == $this->prefix . $needle) {\n+            if ($file != $this->prefix . $needle) {\n                 return $file;\n             }\n         }\n \n         throw new FileNotFound();\n     }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\FileMatchers\\PrefixTest::testPrefix"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/EndsWith.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\LessThan",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\EndsWith",
      "method": "fileEndsWith",
      "line": 37,
      "diff": "--- Original\n+++ New\n@@ @@\n         $length = strlen($needle);\n-        if (strlen($haystack) < $length) {\n+        if (strlen($haystack) >= $length) {\n             return $this->fileEndsWith($needle, $haystack);\n         }\n \n         return (substr($haystack, -$length) === $needle);\n     }\n }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/EndsWith.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\BracketedStatement",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\EndsWith",
      "method": "fileEndsWith",
      "line": 41,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return (substr($haystack, -$length) === $needle);\n+        (substr($haystack, -$length) === $needle); return null;\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/EndsWith.php",
      "mutator": "\\Humbug\\Mutator\\Arithmetic\\Subtraction",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\EndsWith",
      "method": "fileEndsWith",
      "line": 41,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return (substr($haystack, -$length) === $needle);\n+        return (substr($haystack, +$length) === $needle);\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/FileMatchers\/EndsWith.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\FileMatchers\\EndsWith",
      "method": "fileEndsWith",
      "line": 41,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        return (substr($haystack, -$length) === $needle);\n+        return (substr($haystack, -$length) !== $needle);\n     }\n }\n \n",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverage",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageFailed",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testAddingAllUnknownsUnCovered",
        "exussum12\\CoverageChecker\\tests\\CoverageCheckTest::testCoverageForContextLines",
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 28,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            !is_readable($this->fileLocation) &&\n+            is_readable($this->fileLocation) &&\n             strpos($this->fileLocation, \"php:\/\/\") !== 0\n         )) {\n             throw new InvalidArgumentException(\"Can't read file\");\n         }\n \n         $handle = fopen($this->fileLocation, 'r');",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testNonExistantFile",
        "9": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "16": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "22": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 28,
      "diff": "--- Original\n+++ New\n@@ @@\n         if ((\n-            !is_readable($this->fileLocation) &&\n+            !is_readable($this->fileLocation) ||\n             strpos($this->fileLocation, \"php:\/\/\") !== 0\n         )) {\n             throw new InvalidArgumentException(\"Can't read file\");\n         }\n \n         $handle = fopen($this->fileLocation, 'r');",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testNonExistantFile",
        "9": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "16": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "22": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 29,
      "diff": "--- Original\n+++ New\n@@ @@\n             !is_readable($this->fileLocation) &&\n-            strpos($this->fileLocation, \"php:\/\/\") !== 0\n+            strpos($this->fileLocation, \"php:\/\/\") === 0\n         )) {\n             throw new InvalidArgumentException(\"Can't read file\");\n         }\n \n         $handle = fopen($this->fileLocation, 'r');\n ",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testNonExistantFile",
        "9": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "10": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "12": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "16": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "22": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getChangedLines",
      "line": 36,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-        while (($line = fgets($handle)) !== false) {\n+        while (($line = fgets($handle)) === false) {\n             \/\/ process the line read.\n             $lineHandle = $this->getLineHandle($line);\n             $lineHandle->handle($line);\n             $this->diff->incrementCurrentPosition();\n         }\n ",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getClass",
      "line": 62,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!isset($this->handles[$this->getFileHandleName($className)])) {\n+        if (isset($this->handles[$this->getFileHandleName($className)])) {\n             $this->handles[\n                 $this->getFileHandleName($className)\n             ] = new $className($this->diff);\n         }\n \n         return $this->handles[$this->getFileHandleName($className)];",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/DiffFileLoader.php",
      "mutator": "\\Humbug\\Mutator\\ReturnValue\\FunctionCall",
      "class": "\\exussum12\\CoverageChecker\\DiffFileLoader",
      "method": "getFileHandleName",
      "line": 74,
      "diff": "--- Original\n+++ New\n@@ @@\n         $namespace = explode('\\\\', $namespace);\n-        return end($namespace);\n+        end($namespace); return null;\n     }\n }\n \n",
      "tests": {
        "0": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderOldVersionTest::testDiffResultsMatch",
        "4": "exussum12\\CoverageChecker\\tests\\DiffFileLoaderTest::testDiffResultsMatch",
        "8": "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "9": "exussum12\\CoverageChecker\\tests\\PhpStanRelatedTest::testRelatedMethods",
        "10": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "11": "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode",
        "12": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testValid",
        "13": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLines",
        "14": "exussum12\\CoverageChecker\\tests\\PhpmdDiffFilterTest::testNoValidLinesStrict",
        "15": "exussum12\\CoverageChecker\\tests\\PhpmndDiffFilterTest::testValid",
        "16": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testWorkingCorrectly",
        "17": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testFailingBuild",
        "18": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testPassingLowPercentage",
        "19": "exussum12\\CoverageChecker\\tests\\PhpunitDiffFilterTest::testNoCoveredLines",
        "20": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testOutputOfGetTests",
        "21": "exussum12\\CoverageChecker\\tests\\PhpunitFilterTest::testUnknownDiffFiles"
      },
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CheckstyleLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CheckstyleLoader",
      "method": "getLines",
      "line": 42,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                $reader->name === \"file\" &&\n+                $reader->name !== \"file\" &&\n                 $reader->nodeType == XMLReader::ELEMENT\n             )) {\n                 $currentFile = $reader->getAttribute('name');\n                 $trim = '.\/';\n                 $currentFile = substr($currentFile, strlen($trim));\n                 $this->coveredLines[$currentFile] = [];",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CheckstyleTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CheckstyleLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalAnd",
      "class": "\\exussum12\\CoverageChecker\\CheckstyleLoader",
      "method": "getLines",
      "line": 42,
      "diff": "--- Original\n+++ New\n@@ @@\n             if ((\n-                $reader->name === \"file\" &&\n+                $reader->name === \"file\" ||\n                 $reader->nodeType == XMLReader::ELEMENT\n             )) {\n                 $currentFile = $reader->getAttribute('name');\n                 $trim = '.\/';\n                 $currentFile = substr($currentFile, strlen($trim));\n                 $this->coveredLines[$currentFile] = [];",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CheckstyleTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CheckstyleLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Equal",
      "class": "\\exussum12\\CoverageChecker\\CheckstyleLoader",
      "method": "getLines",
      "line": 43,
      "diff": "--- Original\n+++ New\n@@ @@\n                 $reader->name === \"file\" &&\n-                $reader->nodeType == XMLReader::ELEMENT\n+                $reader->nodeType != XMLReader::ELEMENT\n             )) {\n                 $currentFile = $reader->getAttribute('name');\n                 $trim = '.\/';\n                 $currentFile = substr($currentFile, strlen($trim));\n                 $this->coveredLines[$currentFile] = [];\n             }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CheckstyleTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CheckstyleLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\Identical",
      "class": "\\exussum12\\CoverageChecker\\CheckstyleLoader",
      "method": "getLines",
      "line": 51,
      "diff": "--- Original\n+++ New\n@@ @@\n \n-            if ($reader->name === \"error\") {\n+            if ($reader->name !== \"error\") {\n                 $this->coveredLines\n                     [$currentFile]\n                     [$reader->getAttribute('line')]\n                     = $reader->getAttribute(\"message\");\n             }\n         }",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CheckstyleTest::testOutput"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/CheckstyleLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\CheckstyleLoader",
      "method": "handleNotFoundFile",
      "line": 75,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\CheckstyleTest::testNotFoundFile"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\ConditionalNegation\\NotIdentical",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "__construct",
      "line": 52,
      "diff": "--- Original\n+++ New\n@@ @@\n         $this->json = json_decode(file_get_contents($filePath));\n-        if (json_last_error() !== JSON_ERROR_NONE) {\n+        if (json_last_error() === JSON_ERROR_NONE) {\n             throw new InvalidArgumentException(\n                 \"Can't Parse phpcs json - \" . json_last_error_msg()\n             );\n         }\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCanMakeClass",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testRejectsInvalidData",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCorrectMissingFile",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testWholeFileError",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "isValidLine",
      "line": 79,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!empty($this->invalidFiles[$file])) {\n+        if (empty($this->invalidFiles[$file])) {\n             return false;\n         }\n \n         return empty($this->invalidLines[$file][$lineNumber]);\n     }\n ",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCanMakeClass",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testWholeFileError"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\FalseValue",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "isValidLine",
      "line": 80,
      "diff": "--- Original\n+++ New\n@@ @@\n         if (!empty($this->invalidFiles[$file])) {\n-            return false;\n+            return true;\n         }\n \n         return empty($this->invalidLines[$file][$lineNumber]);\n     }\n \n     \/**",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testWholeFileError"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\LogicalNot",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "addInvalidLine",
      "line": 92,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        if (!in_array($message->type, $this->failOnTypes)) {\n+        if (in_array($message->type, $this->failOnTypes)) {\n             return;\n         }\n         $line = $message->line;\n \n         if (!isset($this->invalidLines[$file][$line])) {\n             $this->invalidLines[$file][$line] = [];",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCanMakeClass",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testStrictMode",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testWholeFileError",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    },
    {
      "file": "src\/PhpCsLoader.php",
      "mutator": "\\Humbug\\Mutator\\Boolean\\TrueValue",
      "class": "\\exussum12\\CoverageChecker\\PhpCsLoader",
      "method": "handleNotFoundFile",
      "line": 113,
      "diff": "--- Original\n+++ New\n@@ @@\n     {\n-        return true;\n+        return false;\n     }\n \n     \/**\n      * {@inheritdoc}\n      *\/\n     public static function getDescription()",
      "tests": [
        "exussum12\\CoverageChecker\\tests\\GenericDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\LoadPhpcsReportTest::testCorrectMissingFile",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testValid",
        "exussum12\\CoverageChecker\\tests\\PhpcsDiffFilterTest::testStrictMode"
      ],
      "stderr": "",
      "stdout": "TAP version 13"
    }
  ]
}
